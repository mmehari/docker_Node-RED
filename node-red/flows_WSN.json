[{"id":"dfca7471.a1e698","type":"tab","label":"single-hop_WSN"},{"id":"9e87c9ce.0ab558","type":"subflow","name":"final_action","info":"","in":[{"x":160,"y":160,"wires":[]}],"out":[]},{"id":"7823bf3e.a929f","type":"subflow","name":"Measurement","info":"","in":[{"x":120,"y":100,"wires":[{"id":"2b087b64.ee4304"}]}],"out":[{"x":860,"y":240,"wires":[{"id":"e33aa464.db8818","port":0}]},{"x":860,"y":580,"wires":[{"id":"98509978.45f6b8","port":0},{"id":"c1e616dc.c824d8","port":0}]},{"x":860,"y":280,"wires":[{"id":"c26cb2.cecd835","port":0}]}]},{"id":"6d0404f7.1e749c","type":"subflow","name":"cooja_setup","info":"","in":[{"x":60,"y":100,"wires":[{"id":"3c133ce5.1029c4"}]}],"out":[{"x":860,"y":320,"wires":[{"id":"c0129137.20995","port":0}]}]},{"id":"2ccc54b4.8ffd1c","type":"subflow","name":"param_config","info":"","in":[{"x":100,"y":100,"wires":[{"id":"50dac24a.d1c73c"}]}],"out":[{"x":740,"y":80,"wires":[{"id":"af8c03e1.2882f","port":0}]}]},{"id":"6ecf21cd.62a7b","type":"subflow","name":"portable_setup","info":"","in":[{"x":80,"y":160,"wires":[{"id":"f5b98115.f66d9"}]}],"out":[{"x":860,"y":80,"wires":[{"id":"94b02590.76a6e8","port":0}]}]},{"id":"cdf9b642.28c878","type":"subflow","name":"wilab2_setup","info":"","in":[{"x":240,"y":60,"wires":[]}],"out":[{"x":400,"y":60,"wires":[]}]},{"id":"1e47311c.96e34f","type":"debug","z":"9e87c9ce.0ab558","name":"action_stdout","active":true,"console":"false","complete":"payload","x":690,"y":160,"wires":[]},{"id":"f2c9bf6a.e713a","type":"function","z":"9e87c9ce.0ab558","name":"calc_pareto","func":"\n// Multi-dimensional quick sort implementation\nfunction qsort(a)\n{\n\tif (a.length === 0)\n\t\treturn [];\n\n\tvar left = [];\n\tvar right = [];\n\tvar pivot = a[0];\n\n\tfor (var i = a.length; --i;)\n\t{\n\t\tif (a[i][0] < pivot[0])\n\t\t\tleft.push(a[i]);\n\t\telse\n\t\t\tright.push(a[i]);\n\t}\n\n\treturn qsort(left).concat([pivot], qsort(right));\n}\n\n// Pare-to front calculation\nfunction pareto(a)\n{\n\t// Sort the pareto_array\n\tvar pareto_array = qsort(a);\n\n\t// Iteratively calculate the pareto fronts\n\tvar iter = 0;\n\twhile(iter < pareto_array.length-1)\n\t{\n\t\t// Intermediate pareto holding array\n\t\tvar pareto_intmed = [];\n\n\t\t// Search possible pareto elements above the pareto iterator element\n\t\tfor(var i=0; i<pareto_array.length; i++)\n\t\t{\n\t\t\t// Up to the current iterator, fill the intermediate array with the pareto_array\n\t\t\tif(i <= iter)\n\t\t\t\tpareto_intmed.push(pareto_array[i]);\n\t\t\t// If pareto element is greater than current item, add it to the intermediate pareto array\n\t\t\telse if(pareto_array[iter][1] > pareto_array[i][1])\n\t\t\t\tpareto_intmed.push(pareto_array[i]);\n\t\t}\n\n\t\t// Update pareto array and iterator element\n\t\tpareto_array = pareto_intmed;\n\t\titer++;\n\t}\n\n\treturn pareto_array;\n}\n\n// Create performance objective array [Audio Quality vs Exposure]\nvar per_obj = [];\nvar dataset_array = msg.payload.split('\\n').filter(function(e){return e});\nfor (i=1; i < dataset_array.length; i++)\n{\n    var dataset = dataset_array[i].split('\\t');\n    per_obj.push([parseFloat(dataset[4]), parseFloat(dataset[5])]);\n}\n\n// Calculate the pareto front of the dataset\nvar pareto_array = pareto(per_obj);\n\n// Retrieve optimum performance\nvar OPT_IPD = pareto_array[0][0];\nvar OPT_PER = pareto_array[pareto_array.length-1][1];\n\n// Calculate the distance between each PF element and [OPT_IPD, OPT_PER]\nvar PF_dist = [];\nfor(var i=0; i<pareto_array.length; i++)\n{\n\tPF_dist[i] = Math.sqrt(Math.pow((pareto_array[i][0]-OPT_IPD),2) + Math.pow((pareto_array[i][1]-OPT_PER),2));\n}\n// Determine knee point index\nvar knee_pt_Idx = PF_dist.indexOf(Math.min.apply(Math, PF_dist));\n\n// Calculate knee point pair\nvar knee_pt_IPD = pareto_array[knee_pt_Idx][0];\nvar knee_pt_PER = pareto_array[knee_pt_Idx][1];\n\nmsg.payload = {\n    PF : pareto_array,\n    OPT_IPD : OPT_IPD,\n    OPT_PER : OPT_PER,\n    knee_pt_IPD : knee_pt_IPD,\n    knee_pt_PER : knee_pt_PER\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":161,"wires":[["1e47311c.96e34f"]]},{"id":"422359ef.8e2e38","type":"function","z":"dfca7471.a1e698","name":"Experiment Setup","func":"// Get coordinates of IMEC w-ilab.t sensor nodes\nfunction ID_to_cord(ID)\n{   var cord = {};\n\tswitch(ID)\n\t{\n\t\tcase 1:  cord = {X: 6.0,  Y: 2.0}; break;\tcase 22: cord = {X: 6.0,  Y: 9.2 }; break;\tcase 43: cord = {X: 6.0,  Y: 16.4}; break;\n\t\tcase 2:  cord = {X: 12.0, Y: 2.0}; break;\tcase 23: cord = {X: 12.0, Y: 9.2 }; break;\tcase 44: cord = {X: 12.0, Y: 16.4}; break;\n\t\tcase 3:  cord = {X: 18.0, Y: 2.0}; break;\tcase 24: cord = {X: 18.0, Y: 9.2 }; break;\tcase 45: cord = {X: 18.0, Y: 16.4}; break;\n\t\tcase 4:  cord = {X: 24.0, Y: 2.0}; break;\tcase 25: cord = {X: 24.0, Y: 9.2 }; break;\tcase 46: cord = {X: 24.0, Y: 16.4}; break;\n\t\tcase 5:  cord = {X: 30.0, Y: 2.0}; break;\tcase 26: cord = {X: 30.0, Y: 9.2 }; break;\tcase 47: cord = {X: 30.0, Y: 16.4}; break;\n\t\tcase 6:  cord = {X: 36.0, Y: 2.0}; break;\tcase 27: cord = {X: 36.0, Y: 9.2 }; break;\tcase 48: cord = {X: 36.0, Y: 16.4}; break;\n\t\tcase 7:  cord = {X: 42.0, Y: 2.0}; break;\tcase 28: cord = {X: 42.0, Y: 9.2 }; break;\tcase 49: cord = {X: 42.0, Y: 16.4}; break;\n\t\tcase 8:  cord = {X: 48.0, Y: 2.0}; break;\tcase 29: cord = {X: 48.0, Y: 9.2 }; break;\tcase 50: cord = {X: 48.0, Y: 16.4}; break;\n\t\tcase 9:  cord = {X: 54.0, Y: 2.0}; break;\tcase 30: cord = {X: 54.0, Y: 9.2 }; break;\tcase 51: cord = {X: 54.0, Y: 16.4}; break;\n\t\tcase 10: cord = {X: 60.0, Y: 2.0}; break;\tcase 31: cord = {X: 60.0, Y: 9.2 }; break;\tcase 52: cord = {X: 60.0, Y: 16.4}; break;\n\t\tcase 11: cord = {X: 6.0,  Y: 5.6}; break;\tcase 33: cord = {X: 6.0,  Y: 12.8}; break;\n\t\tcase 12: cord = {X: 12.0, Y: 5.6}; break;\tcase 34: cord = {X: 12.0, Y: 12.8}; break;\tcase 53: cord = {X: 12.0, Y: 20.0}; break;\n\t\tcase 13: cord = {X: 18.0, Y: 5.6}; break;\tcase 35: cord = {X: 18.0, Y: 12.8}; break;\tcase 54: cord = {X: 18.0, Y: 20.0}; break;\n\t\tcase 14: cord = {X: 24.0, Y: 5.6}; break;\tcase 36: cord = {X: 24.0, Y: 12.8}; break;\n\t\tcase 15: cord = {X: 30.0, Y: 5.4}; break;\tcase 37: cord = {X: 30.0, Y: 12.8}; break;\tcase 55: cord = {X: 30.0, Y: 20.0}; break;\n\t\tcase 16: cord = {X: 36.0, Y: 5.5}; break;\tcase 38: cord = {X: 36.0, Y: 12.8}; break;\tcase 56: cord = {X: 36.0, Y: 20.0}; break;\n\t\tcase 17: cord = {X: 42.0, Y: 5.5}; break;\tcase 39: cord = {X: 42.0, Y: 12.8}; break;\tcase 57: cord = {X: 42.0, Y: 20.0}; break;\n\t\tcase 18: cord = {X: 48.0, Y: 5.5}; break;\tcase 40: cord = {X: 48.0, Y: 12.8}; break;\tcase 58: cord = {X: 48.0, Y: 20.0}; break;\n\t\tcase 19: cord = {X: 54.0, Y: 5.5}; break;\tcase 41: cord = {X: 54.0, Y: 12.8}; break;\tcase 59: cord = {X: 54.0, Y: 20.0}; break;\n\t\tcase 20: cord = {X: 60.0, Y: 5.5}; break;\tcase 42: cord = {X: 60.0, Y: 12.8}; break;\tcase 60: cord = {X: 60.0, Y: 20.0}; break;\n\t}\n\treturn cord;\n}\n// IMEC w-ilab.t Testbed\n// ┌─────────────────────────────────────────────────────────────────────┐\n// │  1      2      3      4      5      6      7      8      9      10  │\n// │  11     12     13     14     15     16     17     18     19     20  │\n// │  22     23     24     25     26     27     28     29     30     31  │\n// │  33     34     35     36     37     38     39     40     41     42  │\n// │  43     44     45     46     47     48     49     50     51     52  │\n// │         53     54            55     56     57     58     59     60  │\n// └─────────────────────────────────────────────────────────────────────┘\n\nvar sink_ID      = [ 1 ];\nvar source_ID    = [ 2, 11, 12 ];\nvar disturber_ID = [ 22 ];\n\n// Cooja simulation parameters\nvar cooja = {};\ncooja.title = \"single-hop_WSN\";\n//cooja.randomseed = \"123456\";\ncooja.radiomedium = {};\ncooja.radiomedium.transmitting_range = \"50.0\";\ncooja.radiomedium.interference_range = \"100.0\";\ncooja.radiomedium.success_ratio_tx = \"1.0\";\ncooja.radiomedium.success_ratio_rx = \"1.0\";\ncooja.motetype = {};\ncooja.motetype.CONTIKI_DIR = \"/home/mmehari/contiki\";\ncooja.motetype.firm_path_rel = \"examples/rime/single-hop_WSN.rm090\";\nmsg.cooja = cooja;\n\n\n// ******* Do not change beyond this line ******* //\n// nodes used in the experiment\nvar GROUPs = {};\n// Sink node group definition\nGROUPs.sink = [];\nGROUPs.sink.push({ID: sink_ID[0], loc: ID_to_cord(sink_ID[0])});\n// Source nodes group definition\nGROUPs.source = [];\nfor(var i=0; i<source_ID.length; i++)\n{\n    GROUPs.source.push({ID: source_ID[i], loc: ID_to_cord(source_ID[i])});\n}\n// Disturber nodes group definition\nGROUPs.disturber = [];\nfor(var i=0; i<disturber_ID.length; i++)\n{\n    GROUPs.disturber.push({ID: disturber_ID[i], loc: ID_to_cord(disturber_ID[i])});\n}\n\n// Make nodes and ids global\ncontext.global.GROUPs = GROUPs;\n\n// Convert integer to hexadecimal of given size\ncontext.global.int2hex = function (integer, size)\n{\n\t// Is the passed value an integer\n\tif(Number.isInteger(integer) === true)\n\t{\n\t\tvar buf = Buffer.allocUnsafe(4);\n\t\t// 8 bit integer\n\t\tif(size == 1)\n\t\t{\n\t\t\tvar uint8 = new Uint8Array([integer]);\n\t\t\tbuf.writeUInt8(uint8[0], 0);\n\t\t}\n\t\t// 16 bit integer\n\t\telse if(size == 2)\n\t\t{\n\t\t\tvar uint16 = new Uint16Array([integer]);\n\t\t\tbuf.writeUInt16LE(uint16[0], 0);\n\t\t}\n\t\t// Else, use 32 bit integer\n\t\telse\n\t\t{\n\t\t\tsize = 4;\n\t\t\tvar uint32 = new Uint32Array([integer]);\n\t\t\tbuf.writeUInt32LE(uint32[0], 0);\n\t\t}\n\t\treturn buf.toString('hex', 0, size);\n\t}\n\telse\n\t{\n\t\tconsole.error(\"int2hex: \" + integer + \" is not an integer\");\n\t}\n};\n\nreturn msg;\n","outputs":1,"noerr":0,"x":190,"y":240,"wires":[["dd42f78.3dd4008"]]},{"id":"feca1dc3.2391e","type":"comment","z":"dfca7471.a1e698","name":"Experiment Setup + Initialization","info":"In this part of the experiment, initial configuraton and setting up of the experiment is conducted.\n\nTODO\n\nAt the end of this phase, the experimentation setup will be in a known state with all default parameters configured.","x":170,"y":160,"wires":[]},{"id":"5a38cd54.39d014","type":"inject","z":"dfca7471.a1e698","name":"Start experiment","topic":"start_experiment","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"x":140,"y":80,"wires":[["cad5031f.ce83b"]]},{"id":"cc8c849.715ac78","type":"comment","z":"dfca7471.a1e698","name":"Initial parameter settings","info":"","x":650,"y":160,"wires":[]},{"id":"f995d8d8.0d4328","type":"function","z":"dfca7471.a1e698","name":"Radio Parameters","func":"\n// Group of nodes global variable\nvar GROUPs = context.global.GROUPs;\n\n// Radio UIDs\nvar UID =\n{\n    phy_channel         : 14751,\n    phy_txPower         : 28244,\n    cca_threshold       : 6819,\n    cca_hysteresis      : 44501,\n    BackOffExponent_max : 32865\n};\n\n// Variable types\nvar UINT_T = 0;\nvar INT_T  = 1;\n\n// Default radio parameters\nvar radio_parameters = \n[\n    // Set parameters on sink and source nodes\n    {\n        GROUPs: [GROUPs.sink, GROUPs.source],\n        control_hdr:\n        [   \n            { uid: UID.phy_channel,         type: UINT_T,   len: 1, value : 17  },  // channel [11-32]\n            { uid: UID.phy_txPower,         type: INT_T,    len: 1, value : 5   },  // transmission power\n            { uid: UID.cca_threshold,       type: INT_T,    len: 1, value : -80 },  // Clear Channel Assesment threshold\n            { uid: UID.cca_hysteresis,      type: UINT_T,   len: 1, value : 4   },  // Clear Channel Assesment hysterisis\n            { uid: UID.BackOffExponent_max, type: UINT_T,   len: 1, value : 3   }   // Maximum backoff exponent\n        ]\n    }\n];\n\n// ******* Do not change beyond this line ******* //\nvar msg = {};\nmsg.parameters = radio_parameters;\nmsg.topic = \"radio_configuration\";\n\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":240,"wires":[["68178fe7.d46a3"]]},{"id":"ceb87228.3f744","type":"comment","z":"dfca7471.a1e698","name":"Experiment Action","info":"","x":130,"y":640,"wires":[]},{"id":"57500133.1a477","type":"comment","z":"dfca7471.a1e698","name":"Intelligent experimentation","info":"","x":150,"y":380,"wires":[]},{"id":"658babd1.b88c94","type":"function","z":"dfca7471.a1e698","name":"Parameters Under Test","func":"\n// Group of nodes global variable\nvar GROUPs = context.global.GROUPs;\n\n// PUT UIDs\nvar UID =\n{\n    IEEE802154_phyTXPower       : 28244,\n    send_interval               : 19367,\n    macMaxCSMABackoffs          : 32865\n};\n\nvar UINT_T = 0;\nvar INT_T = 1;\n\n// Parameters Under Test\nvar PUT = \n[\n    {\n        GROUPs: [GROUPs.source],\n        opcode: 1,\n        control_hdr:\n        [\n            { uid: UID.IEEE802154_phyTXPower,       type: INT_T,    len: 1, values : [0, 1, 2, 3] },                        // transmission power in dBm\n            { uid: UID.send_interval,               type: UINT_T,   len: 4, values : [64, 100, 136, 172, 208, 244, 280] },  // sending interval in msec\n            { uid: UID.macMaxCSMABackoffs,          type: UINT_T,   len: 1, values : [3, 4, 5, 6] } \n        ]\n    }\n];\n\n// Save PUT as a global variable\ncontext.global.PUT = PUT;\n\nmsg = {};\nmsg.PUT = PUT;\nmsg.topic = \"start_experiment\";\n\n\nreturn msg;","outputs":1,"noerr":0,"x":210,"y":480,"wires":[["50787b16.925cb4"]]},{"id":"628d5c69.bb29a4","type":"subflow:7823bf3e.a929f","z":"dfca7471.a1e698","name":"","x":780,"y":480,"wires":[["318eb263.ccbe3e","85c27989.1b5b18"],["6b9d508f.012d8"],["e0ad0ea6.38f65"]]},{"id":"e08b2ee5.d7ded","type":"subflow:9e87c9ce.0ab558","z":"dfca7471.a1e698","name":"","x":170,"y":700,"wires":[]},{"id":"b4478f18.78109","type":"comment","z":"dfca7471.a1e698","name":"Planning","info":"","x":420,"y":440,"wires":[]},{"id":"74da1545.132bcc","type":"comment","z":"dfca7471.a1e698","name":"Reasoning","info":"","x":960,"y":440,"wires":[]},{"id":"adc47910.160cc8","type":"comment","z":"dfca7471.a1e698","name":"Execution","info":"","x":600,"y":440,"wires":[]},{"id":"d490cced.0bfc","type":"function","z":"dfca7471.a1e698","name":"Application Parameters","func":"\n// Group of nodes global variable\nvar GROUPs = context.global.GROUPs;\n\n// Application UIDs\nvar UID = \n{\n    send_interval   : 19367,\n    activate_app    : 25440,\n    message_size    : 57215,\n    receiver        : 57217,\n    source_IDs      : 57218\n};\n\n// Variable types\nvar UINT_T = 0;\nvar INT_T  = 1;\n\n// Sink and source node IDs\nvar sink_ID = GROUPs.sink[0].ID;\nvar source_IDs = [];\nfor(var i = 0; i < GROUPs.source.length; i++)\n    source_IDs.push(GROUPs.source[i].ID);\n\n// Default application parameters\nvar app_parameters = \n[\n    // Set parameters on sink nodes\n    {\n        GROUPs: [GROUPs.sink],\n        control_hdr:\n        [\n            { uid: UID.receiver,        type: UINT_T,    len: 2,     value : sink_ID    },  // Receiver ID\n            { uid: UID.source_IDs,      type: UINT_T,    len: 2,     value : source_IDs },  // source IDs\n            { uid: UID.activate_app,    type: UINT_T,    len: 1,     value : 1          }   // Activate application\n        ]\n    },\n    // Set parameters on source nodes\n    {\n        GROUPs: [GROUPs.source],\n        control_hdr:\n        [\n            { uid: UID.send_interval,   type: UINT_T,    len: 4,     value : 128 },          // Send within 1 second\n            { uid: UID.message_size,    type: UINT_T,    len: 1,     value : 100 },          // Unicast message size\n            { uid: UID.receiver,        type: UINT_T,    len: 2,     value : sink_ID  },     // Sink ID\n            { uid: UID.activate_app,    type: UINT_T,    len: 1,     value : 1 }             // Activate application\n        ]\n    }\n];\n\nvar msg = {};\nmsg.parameters = app_parameters;\nmsg.topic = \"app_configuration\";\n\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":200,"wires":[["68178fe7.d46a3"]]},{"id":"9264f556.824c38","type":"function","z":"dfca7471.a1e698","name":"Custom Parameters","func":"\n// Group of nodes global variable\nvar GROUPs = context.global.GROUPs;\n\n// Custom UIDs\nvar UID = {};\n\n// Variable types\nvar UINT_T = 0;\nvar INT_T  = 1;\n\n// Default radio parameters\nvar custom_parameters = [];\n\nvar msg = {};\nmsg.parameters = custom_parameters;\nmsg.topic = \"custom_configuration\";\n\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":280,"wires":[["68178fe7.d46a3"]]},{"id":"50dac24a.d1c73c","type":"function","z":"2ccc54b4.8ffd1c","name":"combine_param","func":"\n// Convert integer to hexadecimal of given size\nvar int2hex = context.global.int2hex;\n\n// Update parameters to default state\nvar parameters = msg.parameters;\nvar payload = [];\nfor(var i = 0; i < parameters.length; i++)\n{\n    var groups = parameters[i].GROUPs;\n    var control_hdr_orig = parameters[i].control_hdr;\n    \n    // Update control header values\n    var control_hdr = [];\n    for(var j = 0; j < control_hdr_orig.length; j++)\n    {\n        var uid = control_hdr_orig[j].uid;\n        var type = control_hdr_orig[j].type;\n        var len_orig = control_hdr_orig[j].len;\n        var value_orig = control_hdr_orig[j].value;\n\n        // value is a number\n        if(typeof(value_orig) == \"number\")\n        {\n            var value = int2hex(value_orig, len_orig);\n        \tvar len = len_orig;\n        }\n        // value is a string\n        else if(typeof(value_orig) == \"string\")\n        {\n            var value = \"\";\n            for(var k = 0; k < value_orig.length; k++)\n        \t    value = value + value_orig.charCodeAt(k);\n            var len = value_orig.length;\n        }\n        // value is an array or an object\n        else if(typeof(value_orig) == \"object\")\n        {\n            var value = \"\";\n            for(var k in value_orig)\n        \t    value = value + int2hex(value_orig[k], len_orig);\n        \tvar len = len_orig * Object.keys(value_orig).length;\n        }\n        \n        control_hdr.push({uid: uid, type: type, len: len, value : value});\n    }\n\n    // Update group of nodes\n    for(var j = 0; j < groups.length; j++)\n    {\n        var nodes = groups[j];\n    \tvar node_count = Object.keys(nodes).length;\n    \tfor(var k = 0; k < node_count; k++)\n    \t{\n    \t    var ptsFile = nodes[k].ptsFile;\n    \t    \n    \t    payload.push({ptsFile : ptsFile, opcode : 1, control_hdr : control_hdr});\n    \t}\n    }\n}\n\nif(msg.topic == \"app_configuration\")\n{\n    context.app_configuration = payload;\n}\nelse if(msg.topic == \"radio_configuration\")\n{\n    context.radio_configuration = payload;\n}\nelse if(msg.topic == \"custom_configuration\")\n{\n    context.custom_configuration = payload;\n}\n\nif(typeof(context.app_configuration) !== \"undefined\" && typeof(context.radio_configuration) !== \"undefined\" && typeof(context.custom_configuration) !== \"undefined\")\n{\n    var configurations = context.app_configuration.concat(context.radio_configuration.concat(context.custom_configuration));\n\n    // Bind identical ptsFile request configurations\n    for(var i = 0; i < configurations.length; i++)\n    {\n        // Search remaining configurations having similar ptsFiles and similar opcodes\n        for(var j = i+1; j < configurations.length; j++)\n        {\n           if((configurations[i].ptsFile == configurations[j].ptsFile) && (configurations[i].opcode == configurations[j].opcode))\n           {\n               configurations[i].control_hdr = configurations[i].control_hdr.concat(configurations[j].control_hdr);\n               configurations.splice(j,1);\n               j--;\n           }\n        }\n    }\n\n    msg = {};\n    msg.payload = configurations;\n    msg.topic = \"start_experiment\";\n\n    // Reset context parameters for next round\n    delete context.app_configuration;\n    delete context.radio_configuration;\n    delete context.custom_configuration;\n\n    return msg;\n}\n\n","outputs":1,"noerr":0,"x":240,"y":100,"wires":[["93a77663.cb66d8"]]},{"id":"c26cb2.cecd835","type":"link in","z":"7823bf3e.a929f","name":"stderr","links":["f59ec35d.47189","f800d3dc.43e82","25922f09.f9abb"],"x":795,"y":280,"wires":[[]]},{"id":"f800d3dc.43e82","type":"link out","z":"7823bf3e.a929f","name":"stderr","links":["c26cb2.cecd835"],"x":695,"y":280,"wires":[]},{"id":"68178fe7.d46a3","type":"subflow:2ccc54b4.8ffd1c","z":"dfca7471.a1e698","name":"","x":880,"y":240,"wires":[["f588c087.1ce03"]]},{"id":"94b02590.76a6e8","type":"function","z":"6ecf21cd.62a7b","name":"pts to nodeID","func":"\nif(msg.payload == \"pts_mux has STARTED\")\n{\n    context.pts_mux = msg.payload;\n}\nelse if(msg.topic == \"start_experiment\")\n{\n    context.ptsFiles = msg.payload;\n}\n\nif(typeof context.pts_mux !== 'undefined' && typeof context.ptsFiles !== 'undefined')\n//if(typeof context.ptsFiles !== 'undefined')\n{\n    var ptsFiles = context.ptsFiles.split(',');\n    var GROUPs = context.global.GROUPs;\n    \n    // Make sure the number of assingned nodes and configured pts devices are the same\n    var pts_count = ptsFiles.length;\n    var sink_count = GROUPs.sink.length;\n    var source_count = GROUPs.source.length;\n    if(pts_count != sink_count + source_count)\n    {\n        msg.payload = \"Assigned and configured node count does not match\";\n        return [null, msg];\n    }\n    \n    // Match sink nodes to pts devices\n    for(var i = 0; i < sink_count; i++)\n    {\n        GROUPs.sink[i].ptsFile  = ptsFiles[i];\n    }\n    // Match source nodes to pts devices\n    for(var j = 0; j < source_count; i++,j++)\n    {\n        GROUPs.source[j].ptsFile  = ptsFiles[i];\n    }\n    \n    context.global.GROUPs = GROUPs;\n    delete context.ptsFiles;\n    delete context.pts_mux;\n    \n    return [msg, null];\n}","outputs":"2","noerr":0,"x":730,"y":120,"wires":[[],["d5c88003.8daf"]]},{"id":"e26f582e.9ac338","type":"function","z":"6ecf21cd.62a7b","name":"check","func":"\nvar msg1 = {};\nvar msg2 = {};\n\n// Empty payload => cooja is not started\nif(msg.payload === \"\")\n{\n    msg.payload = \"ERROR: cooja simulation or experimentation is not started\";\n    return [null, msg];\n}\nelse\n{\n    var ptyFiles = msg.payload.split('\\n').filter(function(e){return e;});\n    msg.payload = ptyFiles.join(',');\n\n    return [msg, null];\n}","outputs":"2","noerr":0,"x":370,"y":140,"wires":[["dd6f7ee5.8634f","74c3d1e8.63136"],["770eaf66.6b45a"]]},{"id":"dd6f7ee5.8634f","type":"link out","z":"6ecf21cd.62a7b","name":"pts_devices","links":["6a4938a5.f39438"],"x":475,"y":80,"wires":[]},{"id":"6a4938a5.f39438","type":"link in","z":"6ecf21cd.62a7b","name":"pts_devices","links":["dd6f7ee5.8634f"],"x":595,"y":80,"wires":[["94b02590.76a6e8"]]},{"id":"7735c2ce.08c65c","type":"link in","z":"6ecf21cd.62a7b","name":"stderr","links":["6e78f16.4c9bb1","770eaf66.6b45a","a09afe78.daf87","4f963f9.bb5c3c"],"x":595,"y":200,"wires":[["b95be2c1.92561"]]},{"id":"770eaf66.6b45a","type":"link out","z":"6ecf21cd.62a7b","name":"stderr","links":["7735c2ce.08c65c"],"x":475,"y":200,"wires":[]},{"id":"6f320d.93050df4","type":"comment","z":"6ecf21cd.62a7b","name":"Is experimentation started?","info":"","x":250,"y":100,"wires":[]},{"id":"6e78f16.4c9bb1","type":"link out","z":"6ecf21cd.62a7b","name":"stderr","links":["7735c2ce.08c65c"],"x":335,"y":200,"wires":[]},{"id":"f5b98115.f66d9","type":"exec","z":"6ecf21cd.62a7b","command":"motelist -c | cut -d, -f2","addpay":false,"append":"","useSpawn":false,"timer":"","name":"pts devices","x":210,"y":160,"wires":[["e26f582e.9ac338"],["6e78f16.4c9bb1"],[]]},{"id":"74c3d1e8.63136","type":"exec","z":"6ecf21cd.62a7b","command":"/home/mmehari/Dropbox/workspace/pts_mux/pts_mux -g","addpay":true,"append":"","useSpawn":true,"timer":"","name":"start pts_mux","x":540,"y":140,"wires":[["94b02590.76a6e8"],["b95be2c1.92561"],[]]},{"id":"b95be2c1.92561","type":"function","z":"6ecf21cd.62a7b","name":"buf2str","func":"msg.payload = msg.payload.toString('utf8');\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":200,"wires":[["d5c88003.8daf"]]},{"id":"e9cb63f8.a0db6","type":"function","z":"6d0404f7.1e749c","name":"format cla","func":"\nvar ptyFiles = msg.payload.split('\\n').filter(function(e){return e;});\nmsg.payload  = ptyFiles.join(',');\n\nreturn msg;\n","outputs":"1","noerr":0,"x":360,"y":400,"wires":[["2c41b5db.8c82ea","da182e64.f383d"]]},{"id":"3f2ad438.ea600c","type":"comment","z":"6d0404f7.1e749c","name":"Retrieve pts devices","info":"","x":130,"y":360,"wires":[]},{"id":"3c133ce5.1029c4","type":"function","z":"6d0404f7.1e749c","name":"cooja csc template","func":"// Retrieve extention name of a path\nfunction extName(path)\n{\n    return path.substring(path.lastIndexOf('.') + 1); \n}\n\n// Retrieve base name of a path\nfunction baseName(path)\n{\n    var base = path.substring(path.lastIndexOf('/') + 1); \n    if(base.lastIndexOf(\".\") != -1)       \n        base = base.substring(0, base.lastIndexOf(\".\"));\n    return base;\n}\n\n// Retrieve directory name of a path\nfunction dirName(path)\n{\n    var dir = \"\";\n    if(path.lastIndexOf('/') != -1)\n        dir = path.substring(0, path.lastIndexOf('/'));\n    else\n        dir = path;\n    return dir;\n}\n\nvar cooja      = msg.cooja;\nvar title      = (typeof(cooja.title) !== \"undefined\") ?  cooja.title : \"node-red_cooja_example\";\nvar randomseed = (typeof(cooja.randomseed) !== \"undefined\") ?  cooja.randomseed : \"generated\";\n\nvar transmitting_range = cooja.radiomedium.transmitting_range;\nvar interference_range = cooja.radiomedium.interference_range;\nvar success_ratio_tx   = cooja.radiomedium.success_ratio_tx;\nvar success_ratio_rx   = cooja.radiomedium.success_ratio_rx;\n\nvar CONTIKI_DIR   = cooja.motetype.CONTIKI_DIR;\nvar firm_path_rel = cooja.motetype.firm_path_rel;\n\nvar firm_path_CONTIKI       = \"[CONTIKI_DIR]/\" + firm_path_rel;\nvar platform                = extName(firm_path_rel);\nvar csc_path_rel            = dirName(firm_path_rel) + \"/\" + baseName(firm_path_rel) + \".csc\";\ncooja.motetype.csc_path_rel = csc_path_rel;\n\nvar simconf = \n[\n    {name: \"simulation\", children:\n    [\n        {name: \"title\",         text: title},\n        {name: \"speedlimit\",    text: \"1.0\"},\n        {name: \"randomseed\",    text: randomseed},\n        {name: \"motedelay_us\",  text: \"1000000\"},\n        {name: \"radiomedium\",   text: \"org.contikios.cooja.radiomediums.UDGM\", children: \n        [\n            {name: \"transmitting_range\",    text: transmitting_range},\n            {name: \"interference_range\",    text: interference_range},\n            {name: \"success_ratio_tx\",      text: success_ratio_tx},\n            {name: \"success_ratio_rx\",      text: success_ratio_rx}\n        ]},\n        {name: \"events\", children: \n        [\n            {name: \"logoutput\", text: \"40000\"}\n        ]},\n    ]},\n    {name: \"plugin\",  text: \"de.fau.cooja.plugins.Serial2PtyPlugin\"},\n    {name: \"plugin\",  text: \"org.contikios.cooja.plugins.simTimer\"},\n    {name: \"plugin\",  text: \"org.contikios.cooja.plugins.ScriptRunner\", children:\n        [{name: \"plugin_config\", children: \n        [\n            {name: \"script\", text: \"TIMEOUT(1000000000000);\"},\n            {name: \"active\", text: \"false\"}\n        ]}]\n    }\n];\n\n// Create mote configuration\nvar GROUPs = context.global.GROUPs;\nvar motecount = 0;\n\n// Add mote configuration to simulation configuration\nfor(var i in simconf)\n{\n    // Search the last object within simulation object\n    if(simconf[i].name == 'simulation')\n    {\n        var sim_obj = simconf[i].children;\n        var key = Object.keys(sim_obj)[Object.keys(sim_obj).length-1] + 1;\n        \n        // Solution Under Test (SUT) motetype configuration\n        if(GROUPs.sink.length > 0 || GROUPs.source.length > 0)\n        {\n            sim_obj[key] = {name: \"motetype\", text: \"org.contikios.cooja.mspmote.\" + platform.toUpperCase() + \"MoteType\", children:\n            [\n                {name: \"identifier\",    text: platform + \"1\"},\n                {name: \"description\",   text: platform + \" Mote Type #\" + platform},\n                {name: \"firmware\",      text: firm_path_CONTIKI, attrs: {EXPORT: \"copy\"}},\n                [\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.Position\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.RimeAddress\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.IPAddress\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.Mote2MoteRelations\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.interfaces.MoteAttributes\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspClock\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspMoteID\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspButton\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.CC2520Radio\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.UsciA1Serial\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspLED\"},\n                    {name: \"moteinterface\",    text: \"org.contikios.cooja.mspmote.interfaces.MspDebugOutput\"}\n                ]\n            ]};\n            key++;\n        }\n        // Disturber motetype configuration\n        if(GROUPs.disturber.length > 0)\n        {\n            sim_obj[key] = {name: \"motetype\", text: \"org.contikios.cooja.motes.DisturberMoteType\", children:\n            [\n                {name: \"identifier\",    text: \"apptype1\"},\n                {name: \"description\",   text: \"Disturber Mote Type #apptype1\"}\n            ]};\n            key++;\n        }\n        \n        for(var g in GROUPs)\n        {\n            // Sink and Source nodes mote configuration\n            if(g === \"sink\" || g === \"source\")\n            {\n                for(var n in GROUPs[g])\n                {\n                    sim_obj[key] = {name: \"mote\", children:\n                    [\n                        {name: \"breakpoints\"},\n                        {name: \"interface_config\",      text: \"org.contikios.cooja.interfaces.Position\", children:\n                        [\n                              {name: \"x\", text: GROUPs[g][n].loc.X},\n                              {name: \"y\", text: GROUPs[g][n].loc.Y},\n                              {name: \"z\", text: \"0\"}\n                        ]},\n                        {name: \"interface_config\",      text: \"org.contikios.cooja.mspmote.interfaces.MspClock\",  children: [{name: \"deviation\", text: \"1.0\"}]},\n                        {name: \"interface_config\",      text: \"org.contikios.cooja.mspmote.interfaces.MspMoteID\", children: [{name: \"id\", text: GROUPs[g][n].ID}]},\n                        {name: \"motetype_identifier\",   text: platform + \"1\"}\n                    ]};\n                    key++;\n                }\n            }\n            // Disturber nodes mote configuration\n            else if(g === \"disturber\")\n            {\n                for(var n in GROUPs[g])\n                {\n                    sim_obj[key] = {name: \"mote\", children:\n                    [\n                        {name: \"interface_config\",      text: \"org.contikios.cooja.interfaces.Position\", children:\n                        [\n                              {name: \"x\", text: GROUPs[g][n].loc.X},\n                              {name: \"y\", text: GROUPs[g][n].loc.Y},\n                              {name: \"z\", text: \"0\"}\n                        ]},\n                        {name: \"interface_config\",      text: \"org.contikios.cooja.motes.AbstractApplicationMoteType$SimpleMoteID\", children: [{name: \"id\", text: GROUPs[g][n].ID}]},\n                        {name: \"motetype_identifier\",   text: \"apptype1\"}\n                    ]};\n                    key++;\n                }\n            }\n        }\n    }\n    // Configure motes inside TimeLine plugin object\n    else if(simconf[i].name == 'plugin' && simconf[i].text == \"org.contikios.cooja.plugins.TimeLine\")\n    {\n        var plugin_config_obj = simconf[i].children[0].children;\n        var key = Object.keys(plugin_config_obj)[Object.keys(plugin_config_obj).length-1] + 1;\n        \n        for(var g in GROUPs)\n        {\n            for(var n in GROUPs[g])\n            {\n                plugin_config_obj[key] = {name: \"mote\", text: motecount};\n                motecount++;\n                key++;\n            }\n        }\n    }\n}\n\nmsg.payload = {simconf: simconf};\nmsg.filename = CONTIKI_DIR + \"/\" + csc_path_rel;\n\nreturn msg;\n","outputs":1,"noerr":0,"x":210,"y":100,"wires":[["b6e7a8c6.162928"]]},{"id":"65b92c4a.ab2314","type":"comment","z":"6d0404f7.1e749c","name":"Create cooja simulation file","info":"","x":150,"y":60,"wires":[]},{"id":"2c41b5db.8c82ea","type":"exec","z":"6d0404f7.1e749c","command":"/home/mmehari/Dropbox/workspace/pts_mux/pts_mux -g","addpay":true,"append":"","useSpawn":true,"timer":"","name":"start pts_mux","x":540,"y":400,"wires":[["c0129137.20995"],["f3ace535.d91bd8"],[]]},{"id":"c0129137.20995","type":"function","z":"6d0404f7.1e749c","name":"pts to nodeID","func":"\nif(msg.payload == \"pts_mux has STARTED\")\n{\n    context.pts_mux = msg.payload;\n}\nelse if(msg.topic == \"start_experiment\")\n{\n    context.ptsFiles = msg.payload;\n}\n\nif(typeof context.pts_mux !== 'undefined' && typeof context.ptsFiles !== 'undefined')\n//if(typeof context.ptsFiles !== 'undefined')\n{\n    var ptsFiles = context.ptsFiles.split(',');\n    var GROUPs = context.global.GROUPs;\n    \n    // Make sure the number of assingned nodes and configured pts devices are the same\n    var pts_count = ptsFiles.length;\n    var sink_count = GROUPs.sink.length;\n    var source_count = GROUPs.source.length;\n    if(pts_count != sink_count + source_count)\n    {\n        msg.error = \"Assigned and configured node count does not match\";\n        delete msg.payload;\n        return [null, msg];\n    }\n\n    // Match sink nodes to pts devices\n    for(var i = 0; i < sink_count; i++)\n    {\n        GROUPs.sink[i].ptsFile  = ptsFiles[i];\n    }\n    // Match source nodes to pts devices\n    for(var j = 0; j < source_count; i++,j++)\n    {\n        GROUPs.source[j].ptsFile  = ptsFiles[i];\n    }\n    \n    context.global.GROUPs = GROUPs;\n    delete context.ptsFiles;\n    delete context.pts_mux;\n    \n    return [msg, null];\n}","outputs":"2","noerr":0,"x":730,"y":340,"wires":[[],["adb1d6c0.d20ea8"]]},{"id":"f3ace535.d91bd8","type":"function","z":"6d0404f7.1e749c","name":"buf2str","func":"msg.payload = msg.payload.toString('utf8');\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":400,"wires":[["adb1d6c0.d20ea8"]]},{"id":"e10ae649.77da78","type":"link in","z":"6d0404f7.1e749c","name":"pts_devices","links":["da182e64.f383d"],"x":595,"y":340,"wires":[["c0129137.20995"]]},{"id":"da182e64.f383d","type":"link out","z":"6d0404f7.1e749c","name":"pts_devices","links":["e10ae649.77da78"],"x":475,"y":340,"wires":[]},{"id":"adb1d6c0.d20ea8","type":"debug","z":"6d0404f7.1e749c","name":"cooja_stderr","active":true,"console":"false","complete":"true","x":910,"y":400,"wires":[]},{"id":"d5c88003.8daf","type":"debug","z":"6ecf21cd.62a7b","name":"portable_stderr","active":true,"console":"false","complete":"true","x":920,"y":200,"wires":[]},{"id":"25232dfe.1d5632","type":"debug","z":"2ccc54b4.8ffd1c","name":"default_stderr","active":true,"console":"true","complete":"true","x":800,"y":140,"wires":[]},{"id":"dd3393f9.97be","type":"link in","z":"7823bf3e.a929f","name":"delay_in","links":["b2332f43.08231"],"x":115,"y":440,"wires":[["6fc435b5.caabcc"]]},{"id":"b2332f43.08231","type":"link out","z":"7823bf3e.a929f","name":"delay_in","links":["dd3393f9.97be"],"x":695,"y":320,"wires":[]},{"id":"354cb8d0.974f78","type":"comment","z":"7823bf3e.a929f","name":"Reset statistic variables","info":"","x":280,"y":240,"wires":[]},{"id":"bfa8825a.f8078","type":"comment","z":"7823bf3e.a929f","name":"Retrieve statistic variables","info":"","x":290,"y":560,"wires":[]},{"id":"7c74086a.613078","type":"link out","z":"7823bf3e.a929f","name":"delay_out","links":["b2935017.a41c"],"x":355,"y":440,"wires":[]},{"id":"b2935017.a41c","type":"link in","z":"7823bf3e.a929f","name":"delay_out","links":["7c74086a.613078"],"x":115,"y":600,"wires":[["53d40675.916908"]]},{"id":"f59ec35d.47189","type":"link out","z":"7823bf3e.a929f","name":"stderr","links":["c26cb2.cecd835"],"x":695,"y":660,"wires":[]},{"id":"647c15b2.de598c","type":"link in","z":"7823bf3e.a929f","name":"reset_in","links":["59f98fab.12ff"],"x":115,"y":280,"wires":[["eed65d03.63846"]]},{"id":"59f98fab.12ff","type":"link out","z":"7823bf3e.a929f","name":"reset_in","links":["647c15b2.de598c"],"x":375,"y":140,"wires":[]},{"id":"2b087b64.ee4304","type":"function","z":"7823bf3e.a929f","name":"PUT check","func":"\n// First appearing message\nif(msg.topic == \"start_experiment\")\n{\n    context.global.sample_Idx = 0;\n    msg.topic = \"exploration\";\n}\n\n// PUT execution request/response payload and error\nvar payload = msg.payload;\nvar error_msg = msg.error_msg;\n\n// Iterate through all request/response parameters and\n// 1. retrieve PUT parameter values\n// 2. verify that values are successfully executed [\"00\"]\nvar PUT_params = {};\nfor(var i = 0; i < payload.length; i++)\n{\n    var request  = payload[i].request;\n    var response = payload[i].response;\n    \n    var resp_control_hdr = response.control_hdr;\n    for(var j = 0; j < resp_control_hdr.length; j++)\n    {\n        // Is a parameter executed successfully?\n        if(resp_control_hdr[j].value === \"00\")\n        {\n\t\t\tresp_control_hdr.splice(j, 1);\n\t\t\tj--;\n        }\n    }\n    \n    // Display errors\n    if(resp_control_hdr.length !== 0)\n    {\n        error_msg.push({request: request, response: response});\n    }\n    else\n    {\n        var ptsFile  = request.ptsFile;\n        var req_control_hdr  = request.control_hdr;\n        \n        PUT_params[ptsFile] = [];\n        for(var j = 0; j < req_control_hdr.length; j++)\n        {\n            var uid   = req_control_hdr[j].uid;\n            var type  = req_control_hdr[j].type;\n            var len   = req_control_hdr[j].len;\n            var value;\n            \n            // UINT_T\n            if(type === 0)\n                value = Buffer.from(req_control_hdr[j].value, 'hex').readUIntLE(0, len);\n            // INT_T\n            else if(type === 1)\n                value = Buffer.from(req_control_hdr[j].value, 'hex').readIntLE(0, len);\n            \n            PUT_params[ptsFile].push(value);\n        }\n    }\n}\n\n// delete PUT execution request/response payload\ndelete msg.payload;\n    \n// Do we have an error message\nif(error_msg.length !== 0)\n{\n    msg.sample_Idx = context.global.sample_Idx;\n    return [msg, {payload: error_msg}, null];\n}\n// Experiment execution has passed\nelse\n{\n    // Save PUT parameters for later use\n    context.global.PUT_params = PUT_params;\n\t\n    return [null, null, msg];\n}","outputs":"3","noerr":0,"x":250,"y":100,"wires":[["7ad86a1e.c42ba4"],["25922f09.f9abb"],["59f98fab.12ff"]]},{"id":"25922f09.f9abb","type":"link out","z":"7823bf3e.a929f","name":"stderr","links":["c26cb2.cecd835"],"x":375,"y":100,"wires":[]},{"id":"15bb44f4.c909db","type":"comment","z":"7823bf3e.a929f","name":"Wait before collecting results","info":"","x":300,"y":400,"wires":[]},{"id":"f6036096.b398","type":"function","z":"7823bf3e.a929f","name":"reset check","func":"\n// PUT execution request/response payload and error\nvar payload = msg.payload;\nvar error_msg = msg.error_msg;\n\n// Iterate through all request/response parameters and verify that values are successfully executed [\"00\"]\nfor(var i = 0; i < payload.length; i++)\n{\n    var request  = payload[i].request;\n    var response = payload[i].response;\n    \n    var control_hdr = response.control_hdr;\n    \n    for(var j = 0; j < control_hdr.length; j++)\n    {\n        // Is a parameter executed successfully?\n        if(control_hdr[j].value === \"00\")\n        {\n\t\t\tcontrol_hdr.splice(j, 1);\n\t\t\tj--;\n        }\n    }\n    \n    // Display errors\n    if(control_hdr.length !== 0)\n        error_msg.push({request: request, response: response});\n}\n\n// delete PUT execution request/response payload\ndelete msg.payload;\n    \n// Do we have an error message\nif(error_msg.length !== 0)\n{\n    msg.sample_Idx = context.global.sample_Idx;\n    return [msg, {payload: error_msg}, null];\n}\n// Experiment execution has passed\nelse\n{\n    return [null, null, msg];\n}","outputs":"3","noerr":0,"x":570,"y":280,"wires":[["66498699.415548"],["f800d3dc.43e82"],["b2332f43.08231"]]},{"id":"66498699.415548","type":"link out","z":"7823bf3e.a929f","name":"redo_experiment","links":["e33aa464.db8818"],"x":695,"y":240,"wires":[]},{"id":"7ad86a1e.c42ba4","type":"link out","z":"7823bf3e.a929f","name":"redo_experiment","links":["e33aa464.db8818"],"x":375,"y":60,"wires":[]},{"id":"e33aa464.db8818","type":"link in","z":"7823bf3e.a929f","name":"redo_experiment","links":["66498699.415548","7ad86a1e.c42ba4","25413c89.512fa4"],"x":795,"y":240,"wires":[[]]},{"id":"25413c89.512fa4","type":"link out","z":"7823bf3e.a929f","name":"redo_experiment","links":["e33aa464.db8818"],"x":695,"y":540,"wires":[]},{"id":"277f5f2a.bf33d","type":"comment","z":"7823bf3e.a929f","name":"redo experiment","info":"","x":980,"y":240,"wires":[]},{"id":"33f7b98c.723016","type":"comment","z":"7823bf3e.a929f","name":"error message","info":"","x":970,"y":280,"wires":[]},{"id":"16591027.57894","type":"comment","z":"7823bf3e.a929f","name":"experiment passed","info":"","x":990,"y":580,"wires":[]},{"id":"af8c03e1.2882f","type":"function","z":"2ccc54b4.8ffd1c","name":"default check","func":"\n// PUT execution request/response payload\nvar payload   = msg.payload;\nvar error_msg = msg.error_msg;\n\n// Iterate through all request/response parameters and verify that values are successfully executed [\"00\"]\nfor(var i = 0; i < payload.length; i++)\n{\n    var request  = payload[i].request;\n    var response = payload[i].response;\n    \n    var control_hdr = response.control_hdr;\n    for(var j = 0; j < control_hdr.length; j++)\n    {\n        // Are parameters executed successfully?\n        if(control_hdr[j].value === \"00\")\n        {\n\t\t\tcontrol_hdr.splice(j, 1);\n\t\t\tj--;\n        }\n    }\n    \n    // Display errors\n    if(control_hdr.length !== 0)\n        error_msg.push({request: request, response: response});\n}\n\n// delete PUT execution request/response payload\ndelete msg.payload;\n    \n// Do we have an error message\nif(error_msg.length !== 0)\n    return [null, {payload: error_msg}];\n// Experiment execution has passed\nelse\n    return [msg, null];","outputs":"2","noerr":0,"x":610,"y":100,"wires":[[],["25232dfe.1d5632"]]},{"id":"a9d5fc12.106e9","type":"function","z":"7823bf3e.a929f","name":"PARETO_parser","func":"\n// Retrieve base name of a path\nfunction baseName(path)\n{\n    var base = path.substring(path.lastIndexOf('/') + 1); \n    if(base.lastIndexOf(\".\") != -1)       \n        base = base.substring(0, base.lastIndexOf(\".\"));\n    return base;\n}\n\n// Retrieve directory name of a path\nfunction dirName(path)\n{\n    var dir = \"\";\n    if(path.lastIndexOf('/') != -1)\n        dir = path.substring(0, path.lastIndexOf('/'));\n    else\n        dir = path;\n    return dir;\n}\n\n// Modify the filename. Convert the dataset path to PARETO path\nfor(var i = 0; i < msg.payload.length; i++)\n{\n    \n    // Calculate base name of the file path\n    var filename = msg.payload[i].filename;\n    var basename = baseName(filename);\n    \n    // Update the filename to PARETO path\n    msg.payload[i].filename = \"/home/mmehari/GRAPH/\" + basename + \".log\";\n    \n    // Update the payload\n    var payload  = msg.payload[i].payload;\n    if(msg.sample_Idx === 0)\n    {\n        // Remove the header string\n        payload = payload.split('\\n')[1];\n        msg.payload[i].payload = \"\\nH:MOSBO#ITER|TxPower,send_interval,MaxBE|LAT,PER\\n\\nD:MOSBO\\t\" + (msg.sample_Idx + 1) + \"\\t\" + payload;\n    }\n    else\n    {\n        msg.payload[i].payload = \"D:MOSBO\\t\" + (msg.sample_Idx + 1) + \"\\t\" + payload;\n    }\n}\n\nif(msg.sample_Idx === 0)\n    return [msg, null];\nelse\n    return [null, msg];\n","outputs":"2","noerr":0,"x":930,"y":620,"wires":[["2682b9af.b57536"],["3b92180a.1df4c8"]]},{"id":"cad5031f.ce83b","type":"link out","z":"dfca7471.a1e698","name":"experiment_setup","links":["d562d571.3d70b8"],"x":275,"y":80,"wires":[]},{"id":"d562d571.3d70b8","type":"link in","z":"dfca7471.a1e698","name":"experiment_setup","links":["cad5031f.ce83b"],"x":55,"y":240,"wires":[["422359ef.8e2e38"]]},{"id":"5d7a5c2e.85f964","type":"link in","z":"dfca7471.a1e698","name":"PUT","links":["72a6250f.461e0c","f588c087.1ce03"],"x":55,"y":480,"wires":[["658babd1.b88c94"]]},{"id":"67232339.a0ba8c","type":"link in","z":"dfca7471.a1e698","name":"action","links":["d3e95180.f9e2b","1aa0e54a.3fa1db","cf320c23.2bd3d","9c93a6b7.ba11f8","570f448.32383bc"],"x":55,"y":700,"wires":[["e08b2ee5.d7ded"]]},{"id":"f588c087.1ce03","type":"link out","z":"dfca7471.a1e698","name":"reasoning","links":["5d7a5c2e.85f964"],"x":1015,"y":240,"wires":[]},{"id":"570f448.32383bc","type":"link out","z":"dfca7471.a1e698","name":"reasoning","links":["67232339.a0ba8c"],"x":1115,"y":480,"wires":[]},{"id":"5f39396e.667518","type":"link in","z":"dfca7471.a1e698","name":"planning","links":["840ee49d.5fb4e8","6264d68.95a4628","f255680d.679628","85c27989.1b5b18"],"x":295,"y":440,"wires":[["50787b16.925cb4"]]},{"id":"1c66ecc.ac53013","type":"UPI_exec","z":"dfca7471.a1e698","name":"PUT Exec","host":"127.0.0.1","port":"6200","timeout":"3000","retry":"3","reload_MAC":true,"x":600,"y":480,"wires":[["628d5c69.bb29a4"]]},{"id":"ff7c20be.4bc77","type":"tcpClient","z":"6d0404f7.1e749c","name":"pts devices","host":"127.0.0.1","port":"6100","timeout":"10000","client_disconnects":false,"x":190,"y":400,"wires":[["e9cb63f8.a0db6"],[]]},{"id":"b6e7a8c6.162928","type":"js2xml","z":"6d0404f7.1e749c","name":"","x":390,"y":100,"wires":[["7e30d0de.b99b9"]]},{"id":"93a77663.cb66d8","type":"UPI_exec","z":"2ccc54b4.8ffd1c","name":"Default Exec","host":"127.0.0.1","port":"6200","timeout":"3000","retry":"3","reload_MAC":true,"x":430,"y":100,"wires":[["af8c03e1.2882f"]]},{"id":"82ebe0aa.f1317","type":"UPI_exec","z":"7823bf3e.a929f","name":"Reset Exec","host":"127.0.0.1","port":"6200","timeout":"10000","retry":"3","reload_MAC":false,"x":390,"y":280,"wires":[["f6036096.b398"]]},{"id":"655a6ecf.d0d2a","type":"UPI_exec","z":"7823bf3e.a929f","name":"Retrv Exec","host":"127.0.0.1","port":"6200","timeout":"10000","retry":"3","reload_MAC":false,"x":390,"y":600,"wires":[["c8916491.dc0248"]]},{"id":"8b109a79.481828","type":"comment","z":"dfca7471.a1e698","name":"Collection","info":"","x":760,"y":440,"wires":[]},{"id":"910c3661.038048","type":"cooja","z":"6d0404f7.1e749c","name":"","restart":true,"x":310,"y":240,"wires":[["adf064fc.0a55f8"],["c6ee38c0.dfdad8"]]},{"id":"c6ee38c0.dfdad8","type":"link out","z":"6d0404f7.1e749c","name":"stderr1","links":["e3a1088d.690b08"],"x":415,"y":260,"wires":[]},{"id":"44c6f1f5.f9105","type":"link in","z":"6d0404f7.1e749c","name":"from_cooja","links":["adf064fc.0a55f8"],"x":55,"y":400,"wires":[["ff7c20be.4bc77"]]},{"id":"e3a1088d.690b08","type":"link in","z":"6d0404f7.1e749c","name":"stderr","links":["9047960c.dd1898","8b098695.0fbc48","c6ee38c0.dfdad8","adf064fc.0a55f8"],"x":595,"y":460,"wires":[["f3ace535.d91bd8"]]},{"id":"e2f4904f.79465","type":"comment","z":"6d0404f7.1e749c","name":"(Re)Start cooja simulator","info":"","x":150,"y":200,"wires":[]},{"id":"5f3b4c6d.de2ff4","type":"link in","z":"6d0404f7.1e749c","name":"to_cooja","links":["2695c150.347aee"],"x":55,"y":240,"wires":[["8e5d0fe9.ebdb"]]},{"id":"2695c150.347aee","type":"link out","z":"6d0404f7.1e749c","name":"to_cooja","links":["5f3b4c6d.de2ff4"],"x":655,"y":100,"wires":[]},{"id":"adf064fc.0a55f8","type":"link out","z":"6d0404f7.1e749c","name":"from_cooja","links":["44c6f1f5.f9105","e3a1088d.690b08"],"x":415,"y":220,"wires":[]},{"id":"1d894c77.178824","type":"comment","z":"6d0404f7.1e749c","name":"Start pts multiplexer","info":"","x":530,"y":300,"wires":[]},{"id":"8e5d0fe9.ebdb","type":"function","z":"6d0404f7.1e749c","name":"format","func":"\nvar cooja = msg.payload[0].cooja;\nvar topic = msg.payload[0].topic;\n\nreturn {payload: {CONTIKI_DIR: cooja.motetype.CONTIKI_DIR, csc_path_rel: cooja.motetype.csc_path_rel}, topic: topic};","outputs":1,"noerr":0,"x":170,"y":240,"wires":[["910c3661.038048"]]},{"id":"7e30d0de.b99b9","type":"Mfile_out","z":"6d0404f7.1e749c","name":"cooja csc","appendNewline":true,"overwriteFile":"true","x":540,"y":100,"wires":[["2695c150.347aee"]]},{"id":"98509978.45f6b8","type":"Mfile_out","z":"7823bf3e.a929f","name":"header","appendNewline":true,"overwriteFile":"true","x":740,"y":580,"wires":[["a9d5fc12.106e9"]]},{"id":"c1e616dc.c824d8","type":"Mfile_out","z":"7823bf3e.a929f","name":"dataset","appendNewline":true,"overwriteFile":"false","x":740,"y":620,"wires":[["a9d5fc12.106e9"]]},{"id":"2682b9af.b57536","type":"Mfile_out","z":"7823bf3e.a929f","name":"pareto_hdr","appendNewline":true,"overwriteFile":"true","x":1130,"y":620,"wires":[[]]},{"id":"3b92180a.1df4c8","type":"Mfile_out","z":"7823bf3e.a929f","name":"pareto_data","appendNewline":true,"overwriteFile":"false","x":1130,"y":660,"wires":[[]]},{"id":"50787b16.925cb4","type":"LHD","z":"dfca7471.a1e698","sampleSize":"10","name":"LHD-planner","x":430,"y":480,"wires":[["1c66ecc.ac53013"],["4428c8df.620788"]]},{"id":"6b9d508f.012d8","type":"optimization","z":"dfca7471.a1e698","max_iter":"50","HV_PoI_threshold":"0.1","name":"SUMO_optzn","x":980,"y":480,"wires":[["6edea23a.5a52ec","f255680d.679628"],["570f448.32383bc"],["b15d8185.6ea31"]]},{"id":"6edea23a.5a52ec","type":"debug","z":"dfca7471.a1e698","name":"stdout","active":true,"console":"false","complete":"true","x":1150,"y":400,"wires":[]},{"id":"c8916491.dc0248","type":"function","z":"7823bf3e.a929f","name":"centr_output","func":"\n// Retreive global PUT variable\nvar PUT = context.global.PUT;\n\n// Retreive PUT parameters\nvar PUT_params = context.global.PUT_params;\nvar sampleSet_array  = PUT_params[Object.keys(PUT_params)[0]];\n    \n// Retrieve error message\nvar error_msg = msg.error_msg;\n\n// Do we have an error message\nif(error_msg.length !== 0)\n{\n    msg = {};\n    msg.sample_Idx = context.global.sample_Idx;\n    msg.payload = sampleSet_array;\n    return [msg, null, null, {payload: error_msg}];\n}\nelse\n{\n    // Control opcode enumeration\n    var UID =\n    {\n        EXAMPLEUNICASTTXSTATS       : 57219,\n        EXAMPLEUNICASTRXSTATS       : 57216\n    };\n    \n    // sample index\n    var sample_Idx = context.global.sample_Idx;\n    \n    // Calculate the sampleset header text\n    if(sample_Idx === 0)\n    {\n        var PUT_ctrl_hdr = PUT.control_hdr;\n        var lower_bound = \"\";\n        var upper_bound = \"\";\n        var steps = \"\";\n        for (var key in PUT_ctrl_hdr)\n        {\n        \t// Sort values in ascending order\n        \tvar values = PUT_ctrl_hdr[key].values.sort(function(a, b){return a - b;});\n        \n        \t// Calculate step width\n\t\t\tvar step = 0;\n\t\t\tif(values.length == 1)\n\t\t\t{\n\t\t\t\tstep = values[0];\n\t\t\t}\n\t\t\telse if(values.length > 1)\n\t\t\t{\n\t\t\t\tvar array_sum = values.reduce(function (a, b) {return a + b;}, 0);\n\t\t\t\tstep = 2*(array_sum - values.length * values[0]) / ( values.length * (values.length - 1) );\n\t\t\t}\n        \n        \tlower_bound = lower_bound + values[0] + \",\";\n        \tupper_bound = upper_bound + values[values.length - 1] + \",\";\n        \tsteps = steps + step + \",\";\n        }\n        lower_bound = lower_bound.slice(0, -1);\n        upper_bound = upper_bound.slice(0, -1);\n        steps = steps.slice(0, -1);\n        \n        var sampleSet_hdr  = \"[ \" + lower_bound + \" ; \" + upper_bound + \" ; \" + steps + \" ]\";\n    }\n    \n    var payload = msg.payload;\n    var LAT_array = [];\n    var PER_array = [];\n    var RSSI_array = [];\n    var LQI_array = [];\n    for(var i = 0; i < payload.length; i++)\n    {\n        var response = payload[i].response;\n        var num_param = response.num_param;\n        \n        // We expect one message\n        if(num_param === 1)\n        {\n            var uid = response.control_hdr[0].uid;\n            \n            // TxStat message\n            if(uid === UID.EXAMPLEUNICASTTXSTATS)\n            {\n                var value = Buffer.from(response.control_hdr[0].value, 'hex');\n                \n                var latency_sum   = value.readUInt32LE(0);\n                var latency_count = value.readUInt16LE(4);\n\n                // Calculate performance objectives\n                LAT_array.push(parseFloat(latency_sum / (1000*latency_count)));\n            }\n            // RxStat message\n            else if(uid === UID.EXAMPLEUNICASTRXSTATS)\n            {\n                var value = Buffer.from(response.control_hdr[0].value, 'hex');\n                \n                var rssi_sum      = value.readInt16LE(0);\n                var lqi_sum       = value.readUInt16LE(2);\n                var packet_recvd  = value.readUInt16LE(4);\n                var packet_lost   = value.readUInt16LE(6);\n                var seq_nr        = value.readUInt16LE(8);\n                \n                // Calculate performance objectives\n                if(packet_recvd > 0)\n                {\n                    PER_array.push(parseFloat(100 * packet_lost/(packet_lost + packet_recvd)));\n                    RSSI_array.push(parseFloat(rssi_sum/packet_recvd));\n                    LQI_array.push(parseFloat(lqi_sum/packet_recvd));\n                }\n                else\n                {\n                    PER_array.push(100.0);\n                    RSSI_array.push(-120.0);\n                    LQI_array.push(64.0);\n                }\n            }\n        }\n    }\n    \n    var LAT_sum  = LAT_array.reduce(function (a, b) {return a + b;}, 0);\n    var PER_sum  = PER_array.reduce(function (a, b) {return a + b;}, 0);\n    var RSSI_sum = RSSI_array.reduce(function (a, b) {return a + b;}, 0);\n    var LQI_sum  = LQI_array.reduce(function (a, b) {return a + b;}, 0);\n    \n    var LAT_avg  = LAT_sum/(LAT_array.length);\n    var PER_avg  = PER_sum/(PER_array.length);\n    var RSSI_avg = RSSI_sum/(RSSI_array.length);\n    var LQI_avg  = LQI_sum/(LQI_array.length);\n\n    // Make sure all objectives are numbers\n    if(isNaN(LAT_avg) || isNaN(PER_avg))\n    {\n        msg = {};\n        msg.sample_Idx = context.global.sample_Idx;\n        msg.payload = sampleSet_array;\n        error_msg = \"Undefined objective value. LAT_avg=\" + LAT_avg + \" PER_avg=\" + PER_avg;\n        return [msg, null, null, {payload: error_msg}];\n    }\n    else\n    {            \n        // MOSBO file path and sampleSet string\n        var filename = \"/home/mmehari/Desktop/SUMO/single-hop_WSN/samplesValues.txt\";\n        var sampleSet_str = \"\";\n        // First message includes sampleSet header\n        if(sample_Idx === 0)\n            sampleSet_str = sampleSet_str + sampleSet_hdr +  \"\\n\";\n        // Add PUT parameters\n        sampleSet_str = sampleSet_str + sampleSet_array.join('\\t');\n        // Add performance objectives\n        sampleSet_str = sampleSet_str + \"\\t\" + LAT_avg + \"\\t\" + PER_avg;\n    //    sampleSet_str = sampleSet_str + \"\\t\" + LAT_avg + \"\\t\" + PER_avg + \"\\t\" + RSSI_avg + \"\\t\" + LQI_avg;\n    \n        rxstats = [{filename: filename, payload: sampleSet_str}];\n    \n        msg.payload = rxstats;\n        msg.sample_Idx = sample_Idx;\n        delete msg.error_msg;\n        \n        // Update sample index\n        context.global.sample_Idx = sample_Idx + 1;\n        \n        if(sample_Idx === 0)\n            return [null, msg, null, null];\n        else\n            return [null, null, msg, null];\n    }\n}\n","outputs":"4","noerr":0,"x":570,"y":600,"wires":[["25413c89.512fa4"],["98509978.45f6b8"],["c1e616dc.c824d8"],["f59ec35d.47189"]]},{"id":"eed65d03.63846","type":"function","z":"7823bf3e.a929f","name":"Reset","func":"\n// Control opcode enumeration\nvar UID =\n{\n    EXAMPLEUNICASTTXSTATS    : 57219,\n    EXAMPLEUNICASTRXSTATS    : 57216\n};\n\n// Default application parameters\nvar GROUPs = context.global.GROUPs;\nvar sink_ptsFile = GROUPs.sink[0].ptsFile;\n\n// Retrieve PUT global variable\nvar PUT = context.global.PUT;\n\n// pts device file paths\nvar ptsFiles = [];\nfor(var i = 0; i < PUT.GROUPs.length; i++)\n{\n    var GROUP = PUT.GROUPs[i];\n    for(var j = 0; j < GROUP.length; j++)\n\t    ptsFiles.push(GROUP[j].ptsFile);\n}\n\n// Integer to hexadicimal string convertor\nvar int2hex = context.global.int2hex;\n\nvar parameters = [];\nfor(var i = 0; i < ptsFiles.length; i++)\n{\n    var ptsFile = ptsFiles[i];\n\n    // Reset TxStat parameters\n    var latency_sum_hex   = int2hex(0, 4);\n    var latency_count_hex = int2hex(0, 2);\n    \n    var txstats_value = latency_sum_hex + latency_count_hex;\n    var txstats_len   = txstats_value.length / 2;\n    var tx_parameter  = \n    {\n        ptsFile: ptsFile,\n        opcode: 1,\n        control_hdr:\n        [\n            { uid: UID.EXAMPLEUNICASTTXSTATS, type: 0xFF, len: txstats_len, value: txstats_value }\n        ]\n    };\n    parameters.push(tx_parameter);\n\n    // Reset RxStat parameters    \n    var sender_ID;\n    var rxstats_value = \"\";\n    // Search for sender ID from the given pts device file path\n    for(var j = 0; j < GROUPs.source.length; j++)\n    {\n        if(ptsFile == GROUPs.source[j].ptsFile)\n        {\n            // senser ID is sent through the type attribute of control_hdr structure\n            sender_ID = GROUPs.source[j].ID;\n            \n            var rssi_sum_hex     = int2hex(0, 2);\n            var lqi_sum_hex      = int2hex(0, 2);\n            var packet_recvd_hex = int2hex(0, 2);\n            var packet_lost_hex  = int2hex(0, 2);\n\n            rxstats_value = rssi_sum_hex + lqi_sum_hex + packet_recvd_hex + packet_lost_hex;\n            break;\n        }\n    }\n    var rxstats_len = rxstats_value.length / 2;\n    var rx_parameter = \n    {\n        ptsFile: sink_ptsFile,\n        opcode: 1,\n        control_hdr:\n        [\n            { uid: UID.EXAMPLEUNICASTRXSTATS, type: sender_ID, len: rxstats_len, value: rxstats_value }\n        ]\n    };\n    parameters.push(rx_parameter);\n}\n\n\n\n// ******* Do not change beyond this line ******* //\nmsg.payload = parameters;\n\nreturn msg;\n\n","outputs":1,"noerr":0,"x":230,"y":280,"wires":[["82ebe0aa.f1317"]]},{"id":"53d40675.916908","type":"function","z":"7823bf3e.a929f","name":"Retrv","func":"\n// Default application parameters\nvar GROUPs = context.global.GROUPs;\nvar sink_ptsFile = GROUPs.sink[0].ptsFile;\n\n// Retrieve PUT global variable\nvar PUT = context.global.PUT;\n\n// pts device file paths\nvar ptsFiles = [];\nfor(var i = 0; i < PUT.GROUPs.length; i++)\n{\n    var GROUP = PUT.GROUPs[i];\n    for(var j = 0; j < GROUP.length; j++)\n\t    ptsFiles.push(GROUP[j].ptsFile);\n}\n\n// Control opcode enumeration\nvar UID =\n{\n    EXAMPLEUNICASTTXSTATS       : 57219,\n    EXAMPLEUNICASTRXSTATS       : 57216\n};\n\nvar parameters = [];\nfor(var i = 0; i < ptsFiles.length; i++)\n{\n    var ptsFile = ptsFiles[i];\n\n    // Retrieve txStats parameters on source nodes\n    var tx_parameter =\n    {\n        ptsFile: ptsFile,\n        opcode: 0,\n        control_hdr:\n        [\n            { uid: UID.EXAMPLEUNICASTTXSTATS, type: 0xFF, len: 6 }\n        ]\n    };\n    parameters.push(tx_parameter);\n    \n    // Retrieve rxStats parameters on sink nodes\n    var sender_ID;\n    // Search for sender ID from the given pts device file path\n    for(var j = 0; j < GROUPs.source.length; j++)\n    {\n        if(ptsFile == GROUPs.source[j].ptsFile)\n        {\n            // senser ID is sent through the type attribute of control_hdr structure\n            sender_ID = GROUPs.source[j].ID;\n            break;\n        }\n    }\n    var rx_parameter =\n    {\n        ptsFile: sink_ptsFile,\n        opcode: 0,\n        control_hdr:\n        [\n            { uid: UID.EXAMPLEUNICASTRXSTATS, type: sender_ID, len: 10 }\n        ]\n    };\n    parameters.push(rx_parameter);\n}\n\n\nmsg.payload = parameters;\nreturn msg;\n\n","outputs":1,"noerr":0,"x":230,"y":600,"wires":[["655a6ecf.d0d2a"]]},{"id":"6fc435b5.caabcc","type":"delay","z":"7823bf3e.a929f","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":240,"y":440,"wires":[["7c74086a.613078"]]},{"id":"dd42f78.3dd4008","type":"subflow:6d0404f7.1e749c","z":"dfca7471.a1e698","name":"","x":410,"y":240,"wires":[["d490cced.0bfc","f995d8d8.0d4328","9264f556.824c38"]]},{"id":"f255680d.679628","type":"link out","z":"dfca7471.a1e698","name":"reasoning","links":["5f39396e.667518"],"x":1115,"y":400,"wires":[]},{"id":"b15d8185.6ea31","type":"debug","z":"dfca7471.a1e698","name":"stderr","active":true,"console":"false","complete":"true","x":1150,"y":540,"wires":[]},{"id":"27a15465.d9229c","type":"link in","z":"dfca7471.a1e698","name":"error","links":["4428c8df.620788","e0ad0ea6.38f65"],"x":1035,"y":540,"wires":[["b15d8185.6ea31"]]},{"id":"e0ad0ea6.38f65","type":"link out","z":"dfca7471.a1e698","name":"collection_error","links":["27a15465.d9229c"],"x":915,"y":540,"wires":[]},{"id":"4428c8df.620788","type":"link out","z":"dfca7471.a1e698","name":"planning_error","links":["27a15465.d9229c"],"x":555,"y":540,"wires":[]},{"id":"318eb263.ccbe3e","type":"debug","z":"dfca7471.a1e698","name":"Re-Do","active":false,"console":"false","complete":"true","x":950,"y":400,"wires":[]},{"id":"85c27989.1b5b18","type":"link out","z":"dfca7471.a1e698","name":"collection","links":["5f39396e.667518"],"x":915,"y":400,"wires":[]}]